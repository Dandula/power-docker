version: "3.8"

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - ./hosts:/etc/nginx/conf.d
      - ./www:/var/www
      - ./data/certs/hosts:/var/certs
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
      - "8084:8084"
      - "8085:8085"
      - "8086:8086"
    networks:
      - workspace

  php74:
    build:
      context: ./images/php
      dockerfile: 7.x.Dockerfile
      args:
        - PHP_VER=7.4
        - USER_ID
        - GROUP_ID
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: serverName=${XDEBUG_SERVERNAME}
      TZ: ${TIMEZONE}
    working_dir: /var/www
    volumes:
      - ./www:/var/www
      - ./images/php/php7.4.ini:/usr/local/etc/php/conf.d/40-custom.ini
      - ./data/certs/ca:/usr/local/etc/ca
      - ./images/php/msmtprc:/etc/msmtprc
      - ./data/mails:/var/mail/sendmail
      - ./data/certs/mnt:/home/docker/certs
      - ./data/cache/.composer:/home/docker/.composer
      - ./data/cache/.npm:/home/docker/.npm
      - ./logs/php:/var/log/php
      - ./logs/msmtp:/var/log/msmtp
    networks:
      workspace:
        aliases:
          - php

#  php80:
#    build:
#      context: ./images/php
#      dockerfile: 8.x.Dockerfile
#      args:
#        - PHP_VER=8.0
#        - USER_ID
#        - GROUP_ID
#    restart: unless-stopped
#    environment:
#      PHP_IDE_CONFIG: serverName=${XDEBUG_SERVERNAME}
#      TZ: ${TIMEZONE}
#    working_dir: /var/www
#    volumes:
#      - ./www:/var/www
#      - ./images/php/php8.0.ini:/usr/local/etc/php/conf.d/40-custom.ini
#      - ./data/certs/ca:/usr/local/etc/ca
#      - ./images/php/msmtprc:/etc/msmtprc
#      - ./data/mails:/var/mail/sendmail
#      - ./data/certs/mnt:/home/docker/certs
#      - ./data/cache/.composer:/home/docker/.composer
#      - ./data/cache/.npm:/home/docker/.npm
#      - ./logs/php:/var/log/php
#      - ./logs/msmtp:/var/log/msmtp
#    networks:
#      workspace:
#        aliases:
#          - php

  mysql57:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    entrypoint: ""
    command: ["sh", "-c", "chown -R mysql:mysql /var/log/mysql && exec /entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"]
    volumes:
      - ./data/databases/mysql:/var/lib/mysql
      - ./images/mysql/my.cnf:/etc/mysql/conf.d/40-config-file.cnf
      - ./logs/mysql:/var/log/mysql
    ports:
      - "3306:3306"
    networks:
      workspace:
        aliases:
          - mysql

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
# only for linux and macos
#      - ./data/databases/mongo:/data/db
# fix for windows
      - data_mongo:/data/db
    ports:
      - "27017:27017"
    networks:
      - workspace

  memcached:
    image: memcached
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
    ports:
      - "11211:11211"
    networks:
      - workspace

  redis:
    image: redis
    restart: unless-stopped
    entrypoint: ""
    command: ["sh", "-c", "touch /var/log/redis/redis.log && chmod 666 /var/log/redis/redis.log && exec docker-entrypoint.sh redis-server /usr/local/etc/redis/redis.conf"]
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - ./data/databases/redis:/data
      - ./images/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs/redis:/var/log/redis
    ports:
      - "6379:6379"
    networks:
      - workspace

  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    hostname: ws-rabbit
    environment:
      TZ: ${TIMEZONE}
#      RABBITMQ_DEFAULT_USER: ${DB_USER}
#      RABBITMQ_DEFAULT_PASS: ${DB_PASSWORD}
    volumes:
      - ./data/databases/rabbitmq:/var/lib/rabbitmq/mnesia
      - ./images/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5672:5672"
      - "8088:15672"
    networks:
      - workspace

  schedule_php74:
    build:
      context: ./images/schedule
      dockerfile: php7.x.Dockerfile
      args:
        - PHP_VER=7.4
        - USER_ID
        - GROUP_ID
        - TIMEZONE
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - ./data/cron:/home/docker/jobs
      - ./www:/var/www
      - ./images/schedule/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./images/php/php7.4.ini:/etc/php/7.4/cli/conf.d/30-custom.ini
      - ./images/schedule/additional.ini:/etc/php/7.4/cli/conf.d/40-additional.ini
      - ./images/php/msmtprc:/etc/msmtprc
      - ./data/mails:/var/mail/sendmail
      - ./logs/supervisord:/var/log/supervisord
      - ./logs/cron:/var/log/cron
    networks:
      workspace:
        aliases:
          - schedule

#  schedule_php80:
#    build:
#      context: ./images/schedule
#      dockerfile: php8.x.Dockerfile
#      args:
#        - PHP_VER=8.0
#        - USER_ID
#        - GROUP_ID
#        - TIMEZONE
#    restart: unless-stopped
#    environment:
#      TZ: ${TIMEZONE}
#    volumes:
#      - ./data/cron:/home/docker/jobs
#      - ./www:/var/www
#      - ./images/schedule/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
#      - ./images/php/php8.0.ini:/etc/php/8.0/cli/conf.d/30-custom.ini
#      - ./images/schedule/additional.ini:/etc/php/8.0/cli/conf.d/40-additional.ini
#      - ./images/php/msmtprc:/etc/msmtprc
#      - ./data/mails:/var/mail/sendmail
#      - ./logs/supervisord:/var/log/supervisord
#      - ./logs/cron:/var/log/cron
#    networks:
#      workspace:
#        aliases:
#          - schedule

  phpmyadmin:
    image: phpmyadmin
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PMA_HOST: mysql
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 50M
    ports:
      - "8081:80"
    networks:
      - workspace

  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_PLUGINS: "tables-filter tinymce"
    ports:
      - "8082:8080"
    networks:
      - workspace

  mongo-express:
    image: mongo-express
    depends_on:
      - "mongo"
    restart: unless-stopped
    ports:
      - "8083:8081"
    environment:
      TZ: ${TIMEZONE}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${BASICAUTH_PASSWORD}
    networks:
      - workspace

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    depends_on:
      - "redis"
    restart: unless-stopped
    ports:
      - "8087:80"
    environment:
      TZ: ${TIMEZONE}
      REDIS_1_HOST: redis
      REDIS_1_PORT: 6379
      ADMIN_USER: ${BASICAUTH_USERNAME}
      ADMIN_PASS: ${BASICAUTH_PASSWORD}
    networks:
      - workspace

volumes:
  data_mongo:

networks:
  workspace:
    driver: bridge